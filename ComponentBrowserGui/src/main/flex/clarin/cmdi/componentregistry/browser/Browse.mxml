<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:browser="clarin.cmdi.componentregistry.browser.*"
		   initialize="init()"
		   creationComplete="refresh()"
		   width="100%"
		   height="100%"
		   label="Browse...">

	<mx:Script>
		<![CDATA[
		    import clarin.cmdi.componentregistry.services.ComponentInfoService;
		    import clarin.cmdi.componentregistry.services.ProfileInfoService;
		    import clarin.cmdi.componentregistry.services.ProfileListService;
		    import mx.events.CollectionEvent;
			import mx.collections.ArrayCollection;
			import clarin.cmdi.componentregistry.common.components.RegistryViewStack;
			import clarin.cmdi.componentregistry.common.components.BrowseContextMenu;
			import clarin.cmdi.componentregistry.services.DeleteService;
			import clarin.cmdi.componentregistry.services.ComponentListService;
			import clarin.cmdi.componentregistry.common.ItemDescription;
			import mx.controls.Alert;
			import clarin.cmdi.componentregistry.browser.BrowserSelectionEvent;
			import clarin.cmdi.componentregistry.common.Profile;

            [Bindable]
			private var componentsSrv:ComponentListService = ComponentListService.instance;
			[Bindable]
			private var profilesSrv:ProfileListService = new ProfileListService();
			[Bindable]
			private var profileSrv:ProfileInfoService = new ProfileInfoService();
			[Bindable]
			private var componentSrv:ComponentInfoService = new ComponentInfoService();
			
			private var deleteSrv:DeleteService = new DeleteService();
			
			[Bindable]
			private var profilesMenu:BrowseContextMenu;
			[Bindable]
			private var componentsMenu:BrowseContextMenu;
			[Bindable]
			private var selectedProfileItem:ItemDescription;
			[Bindable]
			private var selectedComponentItem:ItemDescription;

			public function init():void {
				profilesMenu = new BrowseContextMenu();
				profilesMenu.viewStack = this.parent as RegistryViewStack;
				profilesMenu.deleteService = deleteSrv;
				componentsMenu = new BrowseContextMenu();
				componentsMenu.viewStack = this.parent as RegistryViewStack;
				componentsMenu.deleteService = deleteSrv;
				deleteSrv.addEventListener(DeleteService.ITEM_DELETED, handleItemDeleted);
			}

			public function refresh():void {
				profilesSrv.load();
				componentsSrv.load();
			}

			private function loadProfileInfoPage(event:BrowserSelectionEvent):void {
				profileSrv.load(event.itemDescription);
			}

			private function loadComponentInfoPage(event:BrowserSelectionEvent):void {
				componentSrv.load(event.itemDescription);
			}

			public function setSelectedDescription(desc:ItemDescription):void {
				if (desc.isProfile) {
					tabnav.selectedIndex = 0;
					this.selectedProfileItem = desc;
				} else {
					tabnav.selectedIndex = 1;
					this.selectedComponentItem = desc;
				}
			}

			private function handleItemDeleted(event:Event):void {
				refresh();
			}
		]]>
	</mx:Script>


	<browser:BrowserColumns id="browserColumns"/>


	<mx:VBox borderStyle="none"
			 horizontalAlign="center"
			 height="100%"
			 width="100%">

		<mx:TabNavigator id="tabnav"
						 width="100%"
						 height="100%"
						 color="0x323232"
						 y="59"
						 borderStyle="outset">
			<mx:VDividedBox label="Profiles"
							width="100%">
				<browser:BrowserOverviewList id="profilesOverview"
											 browserDataProvider="{profilesSrv.itemDescriptions}"
											 browserItemSelected="{loadProfileInfoPage(event)}"
											 browserColumns="{browserColumns.getProfileColumns()}"
											 itemToScrollTo="{selectedProfileItem}"
											 width="100%"
											 height="70%"
											 browseMenu="{profilesMenu}"/>
				<browser:ProfileInfoPage id="profileInfoPage"
										 profile="{profileSrv.profile}"
										 width="100%"
										 height="50%"/>
			</mx:VDividedBox>

			<mx:VDividedBox label="Components"
							width="100%">
				<browser:BrowserOverviewList id="componentsOverview"
											 browserDataProvider="{componentsSrv.itemDescriptions}"
											 browserItemSelected="{loadComponentInfoPage(event)}"
											 browserColumns="{browserColumns.getComponentColumns()}"
											 itemToScrollTo="{selectedComponentItem}"
											 width="100%"
											 height="50%"
											 browseMenu="{componentsMenu}"/>
				<browser:ComponentInfoPage id="componentInfoPage"
										   component="{componentSrv.component}"
										   width="100%"
										   height="50%"/>

			</mx:VDividedBox>
		</mx:TabNavigator>
	</mx:VBox>
</mx:Canvas>
