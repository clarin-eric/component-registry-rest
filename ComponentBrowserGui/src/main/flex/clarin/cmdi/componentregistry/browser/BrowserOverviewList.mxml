<?xml version="1.0" encoding="utf-8"?>

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:comp="clarin.cmdi.componentregistry.common.components.*"
		 xmlns:rictus="com.rictus.controls.*">

	<mx:Metadata>
		[Event(name="browserItemSelected",type="clarin.cmdi.componentregistry.browser.BrowserSelectionEvent")]
	</mx:Metadata>

    
	<mx:ArrayCollection id="browserDataProvider" />
	<mx:Array id="browserColumns"/>


	<mx:Script>
		<![CDATA[
		    import clarin.cmdi.componentregistry.common.components.BrowseContextMenu;
		    import mx.collections.ArrayCollection;
			import mx.events.CollectionEvent;
			import clarin.cmdi.componentregistry.browser.BrowserSelectionEvent;
			import clarin.cmdi.componentregistry.common.ItemDescription;

			private var currentSelectedItem:ItemDescription;
			[Bindable]
            private var menu:BrowseContextMenu;
            
			private function dispatchBrowserSelectionEvent():void {
				if (this.dataGrid.selectedItem != null) {
					var item:ItemDescription = this.dataGrid.selectedItem as ItemDescription
					if (currentSelectedItem == null || currentSelectedItem.id != item.id) { //Only update when the item selected is different.
						currentSelectedItem = item;
						var event:BrowserSelectionEvent = new BrowserSelectionEvent(item);
						dispatchEvent(event);
					}
				}
			}
			
			public function set browseMenu(browseMenu:BrowseContextMenu):void {
			    this.menu = browseMenu;
			    menu.dataGrid= dataGrid;
			}
			
			private function handleKeyUp(event:KeyboardEvent):void {
			    if (event.keyCode == Keyboard.DELETE) { 
			        menu.deleteSelectedItems();
			    }
			}
		]]>
	</mx:Script>

	<mx:HBox horizontalAlign="center"
			 verticalAlign="middle"
			 width="100%">
		<rictus:SearchBox id="searchBox" label="filter..."/>	 
		<mx:Label text="Showing {browserDataProvider.length} of {dataGrid.unfilteredLength}"/>
	</mx:HBox>

	<comp:FilteringDataGrid id="dataGrid"
							x="0"
							y="112"
							width="100%"
							height="100%"
							click="dispatchBrowserSelectionEvent()"
							dataProvider="{browserDataProvider}"
							columns="{browserColumns}"
							contextMenu="{menu.cm}"
							allowMultipleSelection="true"
							searchInput="{searchBox}"
							keyUp="handleKeyUp(event)">
	</comp:FilteringDataGrid>
</mx:VBox>
