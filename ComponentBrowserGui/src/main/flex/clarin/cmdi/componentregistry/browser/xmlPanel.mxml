<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:comp="clarin.cmdi.componentregistry.common.components.*">

	<comp:ScrollableTextArea id="infoTextArea"
							 styleName="xmlTextArea"
							 editable="false"
							 width="100%"
							 height="100%"
							 paddingLeft="5"
							 paddingTop="5"
							 />
	
	<mx:Script>
		<!-- 
			The code below assures lazy loading of the component XML into the scrollable text area. 
			Large component specifications can cause the application to hang or even crash the browser, 
			see <https://trac.clarin.eu/ticket/268>
		-->
		<![CDATA[
			import mx.containers.ViewStack;
			import mx.core.Application;
			private var componentXML:XML;
			private var MAX_XML_LENGTH:int = 10000;
			
			public function set cmdComponent(xml:XML):void {
				if(this.componentXML != xml){
					this.componentXML = xml;
					updateCmdComponentText();
				}
			}
			
			public function updateCmdComponentText():void {
				// Only forward the XML to the text area if the XML panel is the selected view 
				if(isSelectedView()){
					var xmlText:String = componentXML.toXMLString();
					if(xmlText.length > MAX_XML_LENGTH + 3){
						// XML too lengthy, truncate (otherwise we run into performance issues)
						infoTextArea.text = xmlText.substr(0, MAX_XML_LENGTH) + "...\n\nSpecification too large to display. Download XML to see the entire specification.";
					} else{
						infoTextArea.text = xmlText;
					}
				}
			}
			
			private function isSelectedView():Boolean
			{
				var obj:DisplayObject = this;
				// Whole chain until application root should be visible
				while (obj && obj !== Application.application)
				{
					// Special case: viewstack - this item should be the selected item
					if(obj.parent is ViewStack){
						return ViewStack(obj.parent).selectedChild == obj;
					}
					
					obj = obj.parent;
				}
				return true;
			}
		]]>
	</mx:Script>
</mx:VBox>
