<?xml version="1.0" encoding="utf-8"?>
<mx:ComboBox xmlns:mx="http://www.adobe.com/2006/mxml"
				 dataProvider="{spaces}"
				 width="110"
				 close="userSpaceCloseHandler(event);"
				 initialize="init()"
				 >
	
	<mx:Script>
		<![CDATA[
			import clarin.cmdi.componentregistry.common.Credentials;
			import clarin.cmdi.componentregistry.common.Group;
			import clarin.cmdi.componentregistry.common.Login;
			import clarin.cmdi.componentregistry.services.Config;
			import clarin.cmdi.componentregistry.services.ListUserGroupsMembershipService;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			private static const USERSPACE_LABEL:String = "Work space";
			private static const PUBLICSPACE_LABEL:String = "Public space";
			[Bindable]
			public static var spaces:ArrayCollection;
			
			private static function initSpaces():void{
				spaces = new ArrayCollection([{label: PUBLICSPACE_LABEL, space: Config.SPACE_PUBLIC, groupId:null}, {label: USERSPACE_LABEL, space: Config.SPACE_USER, groupId:null}]);
			}
			
			public function onGroupsLoaded(event:Event):void{
				initSpaces();
				for each (var group:Group in Config.instance.getListUserGroupsMembershipService().groups) {
					spaces.addItem({label:group.name, space:Config.SPACE_USER, groupId:group.id});					
				}
				if (Config.instance.space == Config.SPACE_PUBLIC)
					this.selectedIndex = 0;
				else
				if (Config.instance.space == Config.SPACE_USER){
					this.selectedIndex = 1;
				}
			}

			public function init():void{
				Config.instance.getListUserGroupsMembershipService().addEventListener(ListUserGroupsMembershipService.GROUPS_LOADED, onGroupsLoaded);
				Config.instance.getListUserGroupsMembershipService().loadGroupsForUser();
			}
			
			private function getSelectedSpace(event:Event):String{
				return ComboBox(event.target).selectedItem.space;
			}

			private function getSelectedGroup(event:Event):String{
				var s:String;
				var cb:ComboBox = ComboBox(event.target);
				return cb.selectedItem.groupId;
			}

			private function userSpaceCloseHandler(event:Event):void {
				if (Credentials.instance.isLoggedIn()) {
					var groupId:String = getSelectedGroup(event);
					Config.instance.selectedGroup = groupId;
					Config.instance.userSpace = getSelectedSpace(event);
				} else if (selectedIndex != 0) {
					selectedIndex = 0;
					new Login().show(this.parent.parent, Config.VIEW_BROWSE, Config.SPACE_USER, null);
				}
			}
			
			public function setSelectedItem(space:String, groupId:String):void{
				var index:int = 0;
				var found:Boolean = false;
				if (groupId)
				for each (var item:Object in spaces) {
					if (item.groupId==groupId){
						this.selectedIndex = index;
						found = true;
						break;
					}
					index++;
				}
				index = 0;
				if (!found)
				for each (var item:Object in spaces) {
					if (item.space==space){
						this.selectedIndex = index;
						break;
					}
					index++;
				}
			}
		]]>
	</mx:Script>
</mx:ComboBox>
