<?xml version="1.0" encoding="utf-8"?>
<mx:ComboBox xmlns:mx="http://www.adobe.com/2006/mxml"
			 width="110" change="selectionChangedHandler(event)"
			 dataProvider="{spaces}" initialize="init()">
	
	<mx:Script>
		<![CDATA[
			import clarin.cmdi.componentregistry.common.Credentials;
			import clarin.cmdi.componentregistry.common.Group;
			import clarin.cmdi.componentregistry.common.Login;
			import clarin.cmdi.componentregistry.services.Config;
			import clarin.cmdi.componentregistry.services.ListUserGroupsMembershipService;
			import clarin.cmdi.componentregistry.services.RegistrySpace;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			
			private static const PRIVATE_SPACE_LABEL:String = "Private space";
			private static const PUBLIC_SPACE_LABEL:String = "Public space";
			[Bindable]
			public var spaces:ArrayCollection;
			
			//before groups are known
			private function initSpaces():void{
				spaces = new ArrayCollection([{label: PUBLIC_SPACE_LABEL, space: Config.SPACE_PUBLISHED, groupId:null}, {label: PRIVATE_SPACE_LABEL, space: Config.SPACE_PRIVATE, groupId:null}]);
			}

			public function init():void{
				Config.instance.getListUserGroupsMembershipService().addEventListener(ListUserGroupsMembershipService.GROUPS_LOADED, onGroupsLoaded);
				Config.instance.getListUserGroupsMembershipService().loadGroupsForUser(); // triggers the event ListUserGroupsMembershipService.GROUPS_LOADED
			}
			
			private function selectionChangedHandler(event:ListEvent):void {
				if (Credentials.instance.isLoggedIn()) {
					var space:String = ComboBox(event.target).selectedItem.space;
					var groupId:String = ComboBox(event.target).selectedItem.groupId;
					if ((groupId != null) && (groupId != "")) {
						space = Config.SPACE_GROUP; 
					}
					Config.instance.registrySpace = new RegistrySpace(space, groupId);
				} else {
					event.stopPropagation();
					new Login().show(this.parent.parent, Config.VIEW_BROWSE, Config.instance.registrySpace.space, null);
					selectedIndex = 0;
				}
			}
			
			public function onGroupsLoaded(event:Event):void{
				initSpaces();
				for each (var group:Group in Config.instance.getListUserGroupsMembershipService().groups) {
					spaces.addItem({label:group.name, space:Config.SPACE_GROUP, groupId:group.id});					
				} 
				setSelectedIndex();
			}
			
			/**
			 * sets the index according to the current registry space
			 */
			public function setSelectedIndex():void{	
				
				if (Config.instance.registrySpace.space==Config.SPACE_PUBLISHED) {
					this.selectedIndex = 0;
					return;
				}
				
				if(Credentials.instance.isLoggedIn()) {
					if (Config.instance.registrySpace.space==Config.SPACE_PRIVATE) {
						this.selectedIndex = 1;
						return;
					}
					
					var index:int;
					if (Config.instance.registrySpace.space==Config.SPACE_GROUP) {
						for (index=2;index<spaces.length; index++) {
							if (spaces[index].groupId==Config.instance.registrySpace.groupId){
								trace("indeces:" + index+" " +Config.instance.registrySpace.groupId +" " +spaces[index].groupId);
								this.selectedIndex = index;
								return;
							}
						}
					}
					
					// in case of #$%^-up: 				
					var spacesDump:String= spaces[0].space + "; "+spaces[1].space;
					for (index=2;index<spaces.length; index++) {
						spacesDump=spacesDump+";  "+spaces[index].space + " " +spaces[index].groupId;
						}
					
					throw "Cannot identify the selection index for registry-space combobox. space = "+Config.instance.registrySpace.space+ " group "+Config.instance.registrySpace.groupId + spacesDump;
				}
			}
				
			
		]]>
	</mx:Script>
</mx:ComboBox>
