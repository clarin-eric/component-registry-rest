<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 width="400"
		 creationComplete="init()"
		 paddingTop="10"
		 height="90"
		 >
	<mx:Metadata>
		[Event(name="saveClick", type="flash.events.MouseEvent")]
		[Event(name="saveAsNewClick", type="flash.events.MouseEvent")]
		[Event(name="publishClick", type="flash.events.MouseEvent")]
		[Event(name="cancelClick", type="flash.events.MouseEvent")]
		[Event(name="groupSelected", type="clarin.cmdi.componentregistry.browser.GroupSelectionEvent")]
	</mx:Metadata>
		
	<mx:HBox width="400" height="30">
	<mx:Button id="saveBtn"
			   label="Save"
			   click="dispatchEvent(new MouseEvent('saveClick'))"
			   enabled="false"
			   />
	<mx:Button id="saveAsNewBtn"
			   label="Save as new"
			   click="dispatchEvent(new MouseEvent('saveAsNewClick'))"/>
	<mx:Button id="publishBtn"
			   label="Publish in public space"
			   click="dispatchEvent(new MouseEvent('publishClick'))"/>
	
	<mx:Button id="cancelBtn"
			   label="Cancel"
			   click="dispatchEvent(new MouseEvent('cancelClick'))"/>

	</mx:HBox>
	<mx:HBox id="groupPanel" width="400" height="40" paddingTop="10" visible="false">
		<mx:ComboBox id="groupBox"
					 dataProvider="{groups}"
					 />
		<mx:Button id="moveToGroupBtn"
				   label="Move to group"
				   click="onGroupSelected(event)"/>
	</mx:HBox>
	
	<mx:Script>
		<![CDATA[
			import clarin.cmdi.componentregistry.browser.GroupSelectionEvent;
			import clarin.cmdi.componentregistry.common.Group;
			import clarin.cmdi.componentregistry.services.Config;
			import clarin.cmdi.componentregistry.services.ListUserGroupsMembershipService;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;


			[Bindable]
			private var groups:ArrayCollection = new ArrayCollection();
			private var previousSelectedIndex:int=0;
			private static var currentSelectedGroup:String="";
			
			public function onGroupsLoaded(event:Event):void{
				groups.removeAll();
				groups.addItem({label:"Move to group...", space:null, groupId:null});
				
				for each (var group:Group in Config.instance.getListUserGroupsMembershipService().groups) {
					groups.addItem({label:group.name, space:Config.SPACE_USER, groupId:group.id});					
				}
				updateGroupVisibility(event);
			}

			private function updateGroupVisibility(event:Event):void{
				var showGroups:Boolean = Config.instance.getListUserGroupsMembershipService().groups.length>0 && Config.instance.space != Config.SPACE_PUBLIC;
				groupPanel.visible = showGroups;
			}
			
			public function init():void{
				Config.instance.getListUserGroupsMembershipService().addEventListener(ListUserGroupsMembershipService.GROUPS_LOADED, onGroupsLoaded);
				Config.instance.addEventListener(Config.USER_SPACE_TOGGLE_EVENT, updateGroupVisibility);
				Config.instance.getListUserGroupsMembershipService().loadGroupsForUser();
			}
		
			private function onGroupSelected(e:Event):void {
				currentSelectedGroup=groupBox.selectedItem.groupId;
				var groupEvent:GroupSelectionEvent = new GroupSelectionEvent(groupBox.selectedItem.groupId, groupBox.selectedItem.label);
				dispatchEvent(groupEvent);
				// did someone object this selection?
				if (groupEvent.isDefaultPrevented()){
					//e.preventDefault, stopPropagation and stopImmediatePropagation don't undo the selection so we have to do it manually here
					groupBox.selectedIndex = previousSelectedIndex;
				} else{
					previousSelectedIndex = groupBox.selectedIndex;
				}
			}
			
			public function selectGroup(groupId:String):void{
				for (var i:int=0;i<groups.length;i++)
					if (groups.getItemAt(i).groupId == groupId){
						groupBox.selectedIndex = i;
						return;
					}
			}
			
		]]>
	</mx:Script>

</mx:VBox>
