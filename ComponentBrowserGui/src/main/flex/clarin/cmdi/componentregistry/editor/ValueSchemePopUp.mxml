<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				showCloseButton="true"
				close="cleanUp();"
				creationComplete="PopUpManager.centerPopUp(this)"
				title="Edit and choose a type"
				xmlns:editor="clarin.cmdi.componentregistry.editor.*">

	<mx:Script>
		<![CDATA[
			import clarin.cmdi.componentregistry.common.ComponentMD;
			import clarin.cmdi.componentregistry.services.IsocatService;
			
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.TextInput;
			import mx.core.Container;
			import mx.managers.PopUpManager;

			//Stores the result
			[Bindable]
			public var valueSchemeInput:ValueSchemeInput;

			public static const DEFAULT_VALUE:String = "string";
			//Taken from http://www.clarin.eu/cmd/general-component-schema.xsd (allowed_attributetypes_type)
			[Bindable]
			private var simpleValueSchemeDataProvider:ArrayCollection = new ArrayCollection([{label: "anyURI", data: "anyURI"},
				{label: "boolean", data: "boolean"},
				{label: "date", data: "date"},
				{label: "time", data: "time"},
				{label: "decimal", data: "decimal"},
				{label: "float", data: "float"},
				{label: "gDay", data: "gDay"},
				{label: "gMonth", data: "gMonth"},
				{label: "gYear", data: "gYear"},
				{label: "string", data: "string"},
				{label: "dateTime", data: "dateTime"},]);

			private var isocatPopup:IsocatSearchPopUp;

			private function setType():void {
				valueSchemeInput.valueSchemeSimple = simpleValueSchemeBox.selectedItem.data;
				cleanUp();
			}

			private function setPattern():void {
				valueSchemeInput.valueSchemePattern = patternInput.text;
				cleanUp();
			}

			private function setControlledVocabulary():void {
				var enumeration:ArrayCollection = new ArrayCollection();
				for (var i:int = 0; i < enumerationGrid.valueSchemeEnumeration.length - 1; i++) { //copy except the "Add new"
					var item:ValueSchemeItem = enumerationGrid.valueSchemeEnumeration.getItemAt(i) as ValueSchemeItem;
					enumeration.addItem(item);
				}
				valueSchemeInput.valueSchemeEnumeration = enumeration;
				cleanUp();
			}

			private function cleanUp():void {
				PopUpManager.removePopUp(this);
			}

			private function getIsocatPopup():IsocatSearchPopUp {
				if (!isocatPopup) {
					isocatPopup = EditorManager.getIsocatSearchPopUp(IsocatService.TYPE_SIMPLE);
					isocatPopup.addEventListener(IsocatSearchPopUp.OK_EVENT, function(e:Event):void {
							enumerationGrid.setConceptLink(isocatPopup.editField);
						});
				}
				return isocatPopup;
			}

			private function handleIsocatButtonClick(event:MouseEvent):void {
				PopUpManager.addPopUp(getIsocatPopup(), this, false);
			}
			
			private function getInitialTab():Container {
				if(valueSchemeInput != null){
					if(valueSchemeInput.valueSchemeSimple) {
						return typeTab;
					}
					if(valueSchemeInput.valueSchemeEnumeration) {
						return cvTab;
					}
					if(valueSchemeInput.valueSchemePattern) {
						return patternTab;
					}
				}
				return typeTab;
			}
		]]>
	</mx:Script>

	<mx:TabNavigator id="tabnav"
					 width="100%"
					 height="100%"
					 color="0x323232"
					 y="59"
					 borderStyle="outset"
					 resizeToContent="true"
					 minWidth="400"
					 minHeight="200"
					 selectedChild="{getInitialTab()}"
					 >
	
		<mx:VBox id="typeTab" label="Type"
						width="100%" 
						paddingLeft="5" paddingRight="5">	
			<mx:Label text="Select type:"/>
			<mx:HBox width="100%">
				<mx:ComboBox id="simpleValueSchemeBox"
							 selectedItem="{valueSchemeInput.valueSchemeSimple}"
							 prompt="{valueSchemeInput.valueSchemeSimple}"
							 dataProvider="{simpleValueSchemeDataProvider}">
				</mx:ComboBox>
				<mx:Spacer width="100%"/>
				<mx:Button label="Use Type"
						   click="setType()"/>
			</mx:HBox>
		</mx:VBox>
	
		<mx:VBox id="cvTab" label="Controlled vocabulary"
						width="100%"
						paddingLeft="5" paddingRight="5">
		<!-- PD  TODO how should we implement open vocabularies?? -->
		<mx:Label text="Create controlled vocabularies:"/>
			<mx:HBox width="100%">
				<editor:ValueSchemeEnumerationGrid id="enumerationGrid"
												   creationComplete="enumerationGrid.initEnumeration(valueSchemeInput.valueSchemeEnumeration)"/>
				<mx:VBox>
					<mx:Button label="Use Controlled Vocabulary"
							   click="setControlledVocabulary()"/>
					<mx:Button label="Search in isocat..."
							   click="handleIsocatButtonClick(event)"
							   enabled="{enumerationGrid.conceptLinkEdit}"/>
				</mx:VBox>
			</mx:HBox>
		</mx:VBox>
		
		<mx:VBox id="patternTab" label="Pattern"
				 width="100%"
				 paddingLeft="5" paddingRight="5">
			<mx:Label text="Enter pattern:"/>
			<mx:HBox width="100%">
				<mx:TextInput id="patternInput"
							  text="{valueSchemeInput.valueSchemePattern}">
					<!-- PD TODO how can I validate this -->
				</mx:TextInput>
				<mx:Spacer width="100%"/>
				<mx:Button label="Use Pattern"
						   click="setPattern()"/>
			</mx:HBox>
		</mx:VBox>
		
	</mx:TabNavigator>

	<mx:HBox width="100%">
		<mx:Spacer width="100%"/>
		<mx:Button label="Cancel"
				   click="cleanUp()"/>
	</mx:HBox>
</mx:TitleWindow>
