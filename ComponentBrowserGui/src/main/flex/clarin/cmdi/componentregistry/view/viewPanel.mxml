<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:comp="clarin.cmdi.componentregistry.components.*">
	<mx:Script>
		<![CDATA[
			import clarin.cmdi.componentregistry.ComponentElement;
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import clarin.cmdi.componentregistry.Component;
			import clarin.cmdi.componentregistry.ComponentMD;
			import mx.core.UIComponent;

			private function animateList(comp:UIComponent):void {
				if (!comp.visible) {
					comp.includeInLayout = true;
					comp.visible = true;
				} else {
					comp.includeInLayout = false;
					comp.visible = false;
				}
			}

			private function toggleLabel(labelId:Label, comp:UIComponent):String {
				if (comp.visible) {
					return labelId.text = labelId.text.substring(0, labelId.text.length - 1) + "-";
				} else {
					return labelId.text = labelId.text.substring(0, labelId.text.length - 1) + "+";
				}
			}

			private function createList(xmlComponent:Object):ArrayCollection {
				var result:ArrayCollection = new ArrayCollection();
				for each (var attribute:XML in xmlComponent.AttributeList.Attribute) {
					result.addItem(ComponentElement.createAttributeItem(attribute));
				}
				for each (var element:XML in xmlComponent.CMD_Element) {
					result.addItem(ComponentElement.createElementItem(element));

				}
				return result;
			}
		]]>
	</mx:Script>

	<mx:Style>
.dataGridInfoPage {
   alternatingItemColors: #DDE3EF,#DDE3EF;
   headerColors: #DDE3EF,#DDE3EF;
   horizontalGridLines: false;
   horizontalGridLineColor: #eeeeee;
   letterSpacing: 0;
   verticalGridLines: false;
   useRollOver: false;
   borderThickness: 4;
   borderColor: #DDE3EF;
   textIndent: 0;
   cornerRadius: 8;
   dropShadowEnabled: true;
}

.boxStyle {
   borderStyle: solid;
   borderThickness: 2;
   borderColor: #009dff;
   cornerRadius: 8;
}

.boxElementStyle {
   borderStyle: solid;
   backgroundColor: #DDE3EF;
   letterSpacing: 0;
   borderThickness: 1;
   borderColor: #DDE3EF;
   textIndent: 0;
   cornerRadius: 8;
   dropShadowEnabled: true;
}

.xmlTextArea {
   borderStyle: solid;
   backgroundColor: #DDE3EF;
   borderThickness: 1;
   borderColor: #DDE3EF;
   cornerRadius: 8;
   dropShadowEnabled: true;
}
</mx:Style>
	<mx:XML id="cmdComponent"/>


		<mx:Box id="headerBox"
				width="100%"
				visible="{headerTextArea.hasData}"
				includeInLayout="{headerTextArea.hasData}">
			<mx:HBox styleName="boxElementStyle"
					 click="animateList(headerTextArea);toggleLabel(hl, headerTextArea)">
				<mx:Label id="hl"
						  text="Header -"/>
			</mx:HBox>
			<comp:XMLTextArea id="headerTextArea"
							  styleName="xmlTextArea"
							  editable="false"
							  xmlData="{cmdComponent.Header[0]}"
							  width="100%"
							  height="80"/>
		</mx:Box>

		<mx:Repeater id="iter"
					 dataProvider="{cmdComponent.CMD_Component}">
			<mx:HBox styleName="boxElementStyle"
					 name="{iter.currentIndex}"
					 click="animateList(iterGrid[event.currentTarget.name]); toggleLabel(iterLabel[event.currentTarget.name], iterGrid[event.currentTarget.name])">
				<mx:Label id="iterLabel"
						  text="Component: {iter.currentItem.@name} -"/>
			</mx:HBox>
			<mx:DataGrid id="iterGrid"
						 dataProvider="{createList(iter.currentItem)}"
						 labelField="name"
						 width="100%"
						 styleName="dataGridInfoPage"
						 variableRowHeight="true"
						 selectable="false">
				<mx:columns>
					<mx:DataGridColumn dataField="name"
									   headerText="Name"/>
					<mx:DataGridColumn dataField="valueScheme"
									   headerText="Type"
									   itemRenderer="clarin.cmdi.componentregistry.components.ValueSchemeRenderer"
									   sortable="false"/>
					<mx:DataGridColumn dataField="conceptLink"
									   headerText="ConceptLink"
									   itemRenderer="clarin.cmdi.componentregistry.components.ConceptLinkRenderer"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:Repeater>

</mx:VBox>
