<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     ">

	<!-- Using the Datasource JNDI defined in the servlet container. See below 
		for a sample Tomcat datasource configuration. We need TransactionAwareDataSourceProxy 
		because of the mixed access of plain JDBC and JPA. JDBCTemplate will close 
		the database connection otherwise. -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource" ref="applicationServerDataSource"/>
	</bean>


	<bean id="applicationServerDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/ComponentRegistry" />
		<property name="resourceRef" value="true" />
	</bean>

	<!-- SAMPLE TOMCAT DATASOURCE CONFIGURATION: -->
	<!-- <Context> ... <Resource name="jdbc/ComponentRegistry" auth="Container" 
		type="javax.sql.DataSource" driverClassName="org.postgresql.Driver" url="jdbc:postgresql:component_registry" 
		username="compreg" password="compreg" maxActive="10" maxIdle="5" maxWait="4000" 
		removeAbandoned="false" removeAbandonedTimeout="10" logAbandoned="true" /> 
		... </Context> -->

	<!-- To define an ad hoc datasource, use something like the following: -->
	<!-- <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource"> 
		<property name="driverClassName" value="org.postgresql.Driver"/> <property 
		name="url" value="jdbc:postgresql:component_registry"/> <property name="username" 
		value="compreg"/> <property name="password" value="p4ssw0rd"/> </bean> -->

</beans>
