<?xml version="1.0" encoding="UTF-8"?>
<!--
    Component Registry context.xml
    Twan Goosen <twan.goosen@mpi.nl>, 21/9/2011

    This file contains configuration options for the ComponentRegistry 
    package which includes both the REST service and the Flex UI.
    
    For information about the component registry, see 
    <http://www.clarin.eu/cmdi> and 
    <http://trac.clarin.eu/wiki/ComponentRegistry>.
    
    == DATABASE CONNECTION ==
    
    By default, the application assumes a named (JNDI) datasource 
    jdbc/ComponentRegistry that provides access to the ComponentRegistry
    database.
    
    For more information, or configuring a custom datasource Spring bean,
    see WEB-INF/spring-config/datasource-jdbc.xml
    
    A database creation script can be found at 
    <http://svn.clarin.eu/ComponentRegistry/tags/ComponentRegistry-${project.version}/ComponentRegistry/src/main/sql/create.sql>
    
    == SPRING CONFIGURATION ==
    
    This application uses the Spring framework <http://www.springsource.org/>,
    version 2.5. Part of its configuration is handled through Spring beans. 
    These are defined in WEB-INF/applicationContext.xml and the files in 
    WEB-INF/spring-config.
        
    == SHIBBOLETH ==
    
    This application uses Shibboleth authentication. Make sure that the URIs
    for login/logout are set correctly in WEB-INF/shhaa.xml. 
-->
<Context antiJARLocking="true" path="/ComponentRegistry">
  <!-- 
	Passed to the Flex via compRegConfig.jsp so that it can locate the 
	ComponentRegistry REST service. Just supply the PUBLIC application root 
        in the path; the '/rest/registry' part will be added by the application.
        
        "serviceUrlPath" is MANDATORY in all cases and should contain the path 
        of the application relative to the server root, starting with a forward
        slash but no trailing slash, e.g. "/ComponentRegistry", or "" for root
        deployment.
        
        In addition, either "serviceUrlPath" OR the two parameters
        "serviceUrlProtocolHeader" and "serviceUrlHostHeader" need to be 
        defined.
    -->
  <Parameter name="eu.clarin.cmdi.componentregistry.serviceUrlBase" value="${serviceUrlBase}"/>
  <Parameter name="eu.clarin.cmdi.componentregistry.serviceUrlPath" value="${serviceUrlPath}"/>
 <!--
  Uncomment two lines below iff you would like to use the protocol and host
  provided in the request headers.
  <Parameter name="eu.clarin.cmdi.componentregistry.serviceUrlProtocolHeader" value="X-FORWARDED-PROTO"/>
  <Parameter name="eu.clarin.cmdi.componentregistry.serviceUrlHostHeader" value="X-FORWARDED-HOST"/>
 -->
  
  <!--
	Location that gets redirected to from /documentation.jsp, which in turn is linked to
	from the Flex application through the 'Help' link button.
    -->
  <Parameter name="eu.clarin.cmdi.componentregistry.documentationUrl" value="http://www.clarin.eu/cmdi"/>
  <!--
	Space-separated list of users (getRemoteUser()) that should have access to the admin area of the ComponentRegistry
    -->
  <Parameter name="eu.clarin.cmdi.componentregistry.adminUsers" value="twagoo@mpi.nl twan.goosen_mpi.nl@clarin.eu dietuyt@mpi.nl dietuyt_mpi.nl@clarin.eu menwin@mpi.nl menwin_mpi.nl@clarin.eu"/>
  <!--
	Base location of the CMDI toolkit
    -->  
  <Parameter name="eu.clarin.cmdi.componentregistry.toolkitLocation" value="https://infra.clarin.eu/CMDI/1.x"/>
  <!--
	Location of the CMDI general component schema that validates component specifications
    -->
  <Parameter name="eu.clarin.cmdi.componentregistry.generalComponentSchemaUrl" value="https://infra.clarin.eu/CMDI/1.x/xsd/cmd-component.xsd"/>
  <!--
	Location of the stylesheet that transforms component specifications into XML schema documents
    -->
  <Parameter name="eu.clarin.cmdi.componentregistry.component2SchemaXslUrl" value="https://infra.clarin.eu/CMDI/1.x/xslt/comp2schema.xsl"/>
  <!--
	Base location of the ISOcat service
    -->
  <Parameter name="eu.clarin.cmdi.componentregistry.ccrRestUrl" value="https://openskos.meertens.knaw.nl/ccr/api/"/>
</Context>
