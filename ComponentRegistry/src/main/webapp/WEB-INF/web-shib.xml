<?xml version="1.0" encoding="UTF-8"?>

<!-- 
        Configuration file for ComponentRegistry in shibbolized context, which
        any production environment should be.
-->

<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
    <display-name>ComponentRegistry</display-name>
    <description>Clarin Metadata Component Registry</description>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-config/applicationContext.xml,classpath:spring-config/container-environment.xml
        </param-value>
    </context-param>
    
    <context-param>
        <param-name>eu.clarin.cmdi.componentregistry.jpaDialect</param-name>
        <param-value>org.hibernate.dialect.PostgreSQLDialect</param-value>
    </context-param>

    <context-param>
        <param-name>ShhaaConfigLocation</param-name>
        <param-value>/WEB-INF/shhaa.xml</param-value>
    </context-param>   
     
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>clarin.cmdi.componentregistry.servlet.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>NoCachingFilter</filter-name>
        <filter-class>clarin.cmdi.componentregistry.servlet.DontCacheFilter</filter-class>
    </filter>
    <filter>
        <!-- delegate for UserRegistrationAuthenticationFilter defined as bean in Spring applicationContext -->
        <filter-name>userRegistrationAuthenticationFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>NoCachingFilter</filter-name>
        <url-pattern>/rest/registry/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>userRegistrationAuthenticationFilter</filter-name>
        <url-pattern>/rest/*</url-pattern>
    </filter-mapping>
  
    <!-- Make sure this one is declared before the wicket filter, the order matters. Shibboleth should trigger the login, before continuing with the wicket filter.-->
    <filter>
        <filter-name>AAIFilter</filter-name>
        <filter-class>de.mpg.aai.shhaa.AuthFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>AAIFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  
    <listener>
        <listener-class>de.mpg.aai.shhaa.config.ConfigContextListener</listener-class>
    </listener>

    <filter>
        <filter-name>wicket.componentregistry</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>clarin.cmdi.componentregistry.frontend.AdminApp</param-value>
        </init-param>
        <init-param>
            <param-name>configuration</param-name>
            <!--      <param-value>development</param-value>-->
            <param-value>deployment</param-value>
            <!-- you can override with -Dwicket.configuration=development -->
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>wicket.componentregistry</filter-name>
        <url-pattern>/admin/*</url-pattern>
    </filter-mapping>
    
    <!-- Enable CORS -->
    <!--    <filter>
        <filter-name>CorsFilter</filter-name>
        <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
        <init-param>
            <param-name>cors.allowed.methods</param-name>
            <param-value>GET, POST, PUT, DELETE, HEAD, OPTIONS</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CorsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->

    <servlet>
        <servlet-name>ComponentRegistry Web Application</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
        <init-param> 
            <param-name>com.sun.jersey.config.property.classnames</param-name> 
            <param-value>com.sun.jersey.multipart.impl.FormDataMultiPartDispatchProvider</param-value> 
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>io.swagger.jaxrs.json;io.swagger.sample.resource;io.swagger.jaxrs.listing</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ComponentRegistry Web Application</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>Concept Registry Servlet</servlet-name>
        <servlet-class>clarin.cmdi.componentregistry.servlet.ConceptRegistryServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Concept Registry Servlet</servlet-name>
        <url-pattern>/ccr/*</url-pattern>
    </servlet-mapping>
    
    <servlet>
        <servlet-name>Vocabulary Service Servlet</servlet-name>
        <servlet-class>clarin.cmdi.componentregistry.servlet.VocabularyServiceServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Vocabulary Service Servlet</servlet-name>
        <url-pattern>/vocabulary/*</url-pattern>
    </servlet-mapping>
    
    <servlet>
        <servlet-name>JerseyJaxrsConfig</servlet-name>
        <servlet-class>io.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>
        <init-param>
            <param-name>api.version</param-name>
            <param-value>1.0.0</param-value>
        </init-param>
        <init-param>
            <param-name>swagger.api.title</param-name>
            <param-value>CLARIN Component Registry</param-value>
        </init-param>
        <init-param>            
            <param-name>swagger.api.basepath</param-name>
            <param-value>https://catalog.clarin.eu/ds/ComponentRegistry/rest</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
	
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>
